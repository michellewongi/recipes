{"version":3,"sources":["components/Recipes.js","components/Drinks.js","containers/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","recipeList","className","meals","strMeal","src","strMealThumb","alt","strCategory","strArea","dangerouslySetInnerHTML","__html","strInstructions","href","strSource","Drinks","drinkList","drinks","strDrink","strDrinkThumb","strAlcoholic","Home","useState","food","setFood","foodName","setFoodName","drink","setDrink","drinkName","setDrinkName","recipeURL","drinksURL","changeColor","color","document","body","style","backgroundColor","type","placeholder","onChange","e","target","value","onClick","axios","get","then","response","data","catch","error","console","warn","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6QAgCeA,MA9Bf,YAAiC,IAAfC,EAAc,EAAdA,WAChB,OAAKA,EAEH,0BAASC,UAAU,aAAnB,UACE,oBAAIA,UAAU,YAAd,SAA2BD,EAAWE,MAAM,GAAGC,UAC/C,qBAAKC,IAAKJ,EAAWE,MAAM,GAAGG,aAAcC,IAAI,eAChD,8BACE,gDACCN,EAAWE,MAAM,GAAGK,YACjBP,EAAWE,MAAM,GAAGK,YACpB,aAEN,8BACE,+CACCP,EAAWE,MAAM,GAAGM,QAAUR,EAAWE,MAAM,GAAGM,QAAU,aAE/D,mDACA,mBACEP,UAAU,eACVQ,wBAAyB,CACvBC,OAAQV,EAAWE,MAAM,GAAGS,mBAGhC,mBAAGV,UAAU,OAAOW,KAAMZ,EAAWE,MAAM,GAAGW,UAA9C,SACE,2DAvBkB,8BCkBXC,MAnBf,YAAgC,IAAdC,EAAa,EAAbA,UAChB,OAAKA,EAEH,0BAASd,UAAU,YAAnB,UACE,oBAAIA,UAAU,cAAd,SAA6Bc,EAAUC,OAAO,GAAGC,WACjD,qBAAKb,IAAKW,EAAUC,OAAO,GAAGE,cAAeZ,IAAI,UACjD,8BACE,gDACCS,EAAUC,OAAO,GAAGT,eAEvB,8BACE,iDACCQ,EAAUC,OAAO,GAAGG,gBAEvB,4BAAIJ,EAAUC,OAAO,GAAGL,qBAbL,8BCgGVS,MA9Ff,WACE,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,qBAA1B,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAkCN,qBAAlC,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAS,+DAA2DN,GAEpEO,EAAS,mEAA+DH,GAG9E,SAASI,EAAYC,GACnBC,SAASC,KAAKC,MAAMC,gBAAkBJ,EAkCxC,OAGE,cAFA,CAEA,QAAMhC,UAAU,MAAhB,UACE,oBAAIA,UAAU,OAAd,2BACA,0BAASA,UAAU,iBAAnB,UACE,0BAASA,UAAU,eAAnB,UACE,oBAAIA,UAAU,aAAd,kBACA,uBACEqC,KAAK,OACLC,YAAY,4BACZC,SA1CV,SAAsBC,GACpBhB,EAAYgB,EAAEC,OAAOC,UA2Cf,wBACE1C,UAAU,UACV2C,QAAS,WApCjBC,IACGC,IAAIhB,GACJiB,MAAK,SAAUC,GACdzB,EAAQyB,EAASC,SAElBC,OAAM,SAAUC,GACfC,QAAQC,KAAKF,MAgCPnB,EAAY,YAJhB,oBASA,cAAC,EAAD,CAAQhC,WAAYsB,OAGtB,0BAASrB,UAAU,iBAAnB,UACE,oBAAIA,UAAU,eAAd,oBACA,uBACEqC,KAAK,OACLC,YAAY,8BACZC,SAzDV,SAA2BC,GACzBZ,EAAaY,EAAEC,OAAOC,UA0DhB,wBACE1C,UAAU,WACV2C,QAAS,WA5CjBC,IACGC,IAAIf,GACJgB,MAAK,SAAUC,GACdrB,EAASqB,EAASC,SAEnBC,OAAM,SAAUC,GACfC,QAAQC,KAAKF,MAwCPnB,EAAY,YAJhB,oBASA,cAAC,EAAD,CAAQjB,UAAWW,cC5Ed4B,MAZf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACE,cAAC,EAAD,WCGKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASiC,eAAe,SAM1BX,M","file":"static/js/main.6fa7c96e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Recipe({ recipeList }) {\n  if (!recipeList) return <></>;\n  return (\n    <section className=\"recipeCard\">\n      <h1 className=\"food-name\">{recipeList.meals[0].strMeal}</h1>\n      <img src={recipeList.meals[0].strMealThumb} alt=\"Food image\" />\n      <p>\n        <strong>Category: </strong>\n        {recipeList.meals[0].strCategory\n          ? recipeList.meals[0].strCategory\n          : \"Unknown\"}\n      </p>\n      <p>\n        <strong>Cuisine: </strong>\n        {recipeList.meals[0].strArea ? recipeList.meals[0].strArea : \"Unknown\"}\n      </p>\n      <strong>Instructions:</strong>\n      <p\n        className=\"instructions\"\n        dangerouslySetInnerHTML={{\n          __html: recipeList.meals[0].strInstructions,\n        }}\n      ></p>\n      <a className=\"link\" href={recipeList.meals[0].strSource}>\n        <strong>Click for Recipe</strong>\n      </a>\n    </section>\n  );\n}\n\nexport default Recipe;\n","import React from \"react\";\n\nfunction Drinks({ drinkList }) {\n  if (!drinkList) return <></>;\n  return (\n    <section className=\"drinkCard\">\n      <h1 className=\"drinks-name\">{drinkList.drinks[0].strDrink}</h1>\n      <img src={drinkList.drinks[0].strDrinkThumb} alt=\"Drink\" />\n      <p>\n        <strong>Category: </strong>\n        {drinkList.drinks[0].strCategory}\n      </p>\n      <p>\n        <strong>Alcoholic: </strong>\n        {drinkList.drinks[0].strAlcoholic}\n      </p>\n      <p>{drinkList.drinks[0].strInstructions}</p>\n    </section>\n  );\n}\n\nexport default Drinks;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Recipe from \"../components/Recipes\";\nimport Drinks from \"../components/Drinks\";\n\nfunction Home() {\n  const [food, setFood] = useState();\n  const [foodName, setFoodName] = useState();\n  const [drink, setDrink] = useState();\n  const [drinkName, setDrinkName] = useState();\n\n  const recipeURL = `https://www.themealdb.com/api/json/v1/1/search.php?s=${foodName}`;\n\n  const drinksURL = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${drinkName}`;\n\n  // have the UI change based on data\n  function changeColor(color) {\n    document.body.style.backgroundColor = color;\n  }\n\n  function handleChange(e) {\n    setFoodName(e.target.value);\n  }\n\n  function handleChangeDrink(e) {\n    setDrinkName(e.target.value);\n  }\n\n  // Using two sources of data\n  const getRecipe = () => {\n    axios\n      .get(recipeURL)\n      .then(function (response) {\n        setFood(response.data);\n      })\n      .catch(function (error) {\n        console.warn(error);\n      });\n  };\n\n  const getDrink = () => {\n    axios\n      .get(drinksURL)\n      .then(function (response) {\n        setDrink(response.data);\n      })\n      .catch(function (error) {\n        console.warn(error);\n      });\n  };\n\n  return (\n    // displaying the two sources of data\n    // have the UI be interactive\n    <main className=\"App\">\n      <h1 className=\"logo\">Recipes . . .</h1>\n      <section className=\"search-section\">\n        <section className=\"food-section\">\n          <h1 className=\"food-title\">Food</h1>\n          <input\n            type=\"text\"\n            placeholder=\"Name of food (e.g. pasta)\"\n            onChange={handleChange}\n          />\n          <button\n            className=\"foodBtn\"\n            onClick={() => {\n              getRecipe();\n              changeColor(\"#f0a69c\");\n            }}\n          >\n            Search\n          </button>\n          <Recipe recipeList={food} />\n        </section>\n\n        <section className=\"drinks-section\">\n          <h1 className=\"drinks-title\">Drinks</h1>\n          <input\n            type=\"text\"\n            placeholder=\"Name of drink (e.g. mojito)\"\n            onChange={handleChangeDrink}\n          />\n          <button\n            className=\"drinkBtn\"\n            onClick={() => {\n              getDrink();\n              changeColor(\"#ffcfa3\");\n            }}\n          >\n            Search\n          </button>\n          <Drinks drinkList={drink} />\n        </section>\n      </section>\n    </main>\n  );\n}\n\nexport default Home;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}